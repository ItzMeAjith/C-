#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bank")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountInfo(AccountInfo instance);
    partial void UpdateAccountInfo(AccountInfo instance);
    partial void DeleteAccountInfo(AccountInfo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.BankConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountInfo> AccountInfos
		{
			get
			{
				return this.GetTable<AccountInfo>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountInfo")]
	public partial class AccountInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountNo;
		
		private string _Acc_Name;
		
		private System.Nullable<long> _Phone;
		
		private System.Nullable<System.DateTime> _AccOpeningDate;
		
		private System.Nullable<decimal> _AccountBalance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountNoChanging(int value);
    partial void OnAccountNoChanged();
    partial void OnAcc_NameChanging(string value);
    partial void OnAcc_NameChanged();
    partial void OnPhoneChanging(System.Nullable<long> value);
    partial void OnPhoneChanged();
    partial void OnAccOpeningDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccOpeningDateChanged();
    partial void OnAccountBalanceChanging(System.Nullable<decimal> value);
    partial void OnAccountBalanceChanged();
    #endregion
		
		public AccountInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Acc_Name
		{
			get
			{
				return this._Acc_Name;
			}
			set
			{
				if ((this._Acc_Name != value))
				{
					this.OnAcc_NameChanging(value);
					this.SendPropertyChanging();
					this._Acc_Name = value;
					this.SendPropertyChanged("Acc_Name");
					this.OnAcc_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccOpeningDate", DbType="Date")]
		public System.Nullable<System.DateTime> AccOpeningDate
		{
			get
			{
				return this._AccOpeningDate;
			}
			set
			{
				if ((this._AccOpeningDate != value))
				{
					this.OnAccOpeningDateChanging(value);
					this.SendPropertyChanging();
					this._AccOpeningDate = value;
					this.SendPropertyChanged("AccOpeningDate");
					this.OnAccOpeningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction
	{
		
		private int _TranID;
		
		private System.Nullable<int> _AccountNo;
		
		private string _action;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _updatedon;
		
		private System.Nullable<decimal> _TransactionAmount;
		
		public Transaction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TranID
		{
			get
			{
				return this._TranID;
			}
			set
			{
				if ((this._TranID != value))
				{
					this._TranID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="Int")]
		public System.Nullable<int> AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this._AccountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="VarChar(20)")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this._action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedon", DbType="DateTime")]
		public System.Nullable<System.DateTime> updatedon
		{
			get
			{
				return this._updatedon;
			}
			set
			{
				if ((this._updatedon != value))
				{
					this._updatedon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this._TransactionAmount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
